name: My Portfolio site to AWS

on:
  push:
    branches:
      - staging
      - production

jobs:
  BuildAndDeployToStaging:
    name: Build and Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'

    steps:
      # - name: Debug environment
      #   run: |
      #     echo "Node version:"
      #     node -v
      #     echo "NPM version:"
      #     npm -v
      #     echo "Current directory:"
      #     pwd
      #     echo "List files:"
      #     ls -la

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install
        working-directory: ./

      - name: Build React App
        run: npm run build:dev
        working-directory: ./public

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Sync with S3 (Staging)
        run: aws s3 sync ./public s3://${{ secrets.STAGING_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront Cache (Staging)
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.STAGING_DISTRIBUTION_ID }} --paths "/*"

  BuildAndDeployToProduction:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install
        working-directory: ./

      - name: Build React App
        run: npm run build:prod
        working-directory: ./

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Sync with S3 (Production)
        run: aws s3 sync ./public s3://${{ secrets.PRODUCTION_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront Cache (Production)
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.PRODUCTION_DISTRIBUTION_ID }} --paths "/*"
